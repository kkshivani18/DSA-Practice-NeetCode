class Solution {
public:
    unordered_map<Node*, Node*> visited;

    Node* cloneGraph(Node* node) {
        if(!node) return nullptr;

        if(visited.find(node) != visited.end()) return visited[node];

        Node* cloneNode = new Node(node->val);
        visited[node] = cloneNode;

        for(auto neighbor: node->neighbors){
            cloneNode->neighbors.push_back(cloneGraph(neighbor));
        }
        return cloneNode;
    }
};
