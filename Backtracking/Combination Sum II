class Solution {
public:
    vector<vector<int>> result;

    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        vector<int> curr;
        sort(candidates.begin(), candidates.end());
        backtrack(candidates, curr, target, 0);
        return result;
    }

    void backtrack(vector<int>& candidates, vector<int> curr, int target, int index){
        if(target == 0){
            result.push_back(curr);
            return;
        }

        for(int i=index; i<candidates.size(); i++){
            if(i > index && candidates[i] == candidates[i-1]) continue;

            if(candidates[i] > target) break;

            curr.push_back(candidates[i]);
            backtrack(candidates, curr, target - candidates[i], i + 1);
            curr.pop_back();
        }
    }
};
